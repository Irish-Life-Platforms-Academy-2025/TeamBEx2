# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest
  
variables: # terraform variables
 ServiceConnectionName: 'TeamBDevopsSC'
 bk-rg-name: 'teamb-stage-rg'
 bk-str-account-name: 'teambterraformsa'
 bk-container-name: 'states'
 bk-key: 'teambex2.tfstate' # key is actually name of the file, determined here

stages:
  - stage: tfvalidate
    jobs:
      - job: validate
        continueOnError: false
        steps:
          - task: TerraformInstaller@1
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            displayName: init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'TeamBDevopsSC'
              backendAzureRmResourceGroupName: '$(bk-rg-name)'
              backendAzureRmStorageAccountName: '$(bk-str-account-name)'
              backendAzureRmContainerName: '$(bk-container-name)'
              backendAzureRmKey: '$(bk-key)'
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'validate'
          